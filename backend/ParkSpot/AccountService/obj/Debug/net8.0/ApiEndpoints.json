[
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AccountService.DTO.UserDTO, AccountService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "UpdateUser",
    "RelativePath": "api/Account",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userModel",
        "Type": "AccountService.DTO.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "DeleteUser",
    "RelativePath": "api/Account/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "CheckEmail",
    "RelativePath": "api/Account/check-email",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "emailDto",
        "Type": "AccountService.DTO.EmailDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "GenerateOtp",
    "RelativePath": "api/Account/generate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "otpRequest",
        "Type": "AccountService.DTO.OtpDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "GetUserById",
    "RelativePath": "api/Account/GetById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AccountService.DTO.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "GetRoleById",
    "RelativePath": "api/Account/GetRoleById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "LoginUser",
    "RelativePath": "api/Account/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userLogin",
        "Type": "AccountService.DTO.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "RegisterUser",
    "RelativePath": "api/Account/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userModel",
        "Type": "AccountService.Modal.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "RequestPasswordReset",
    "RelativePath": "api/Account/request-password-reset",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestdto",
        "Type": "AccountService.DTO.RequestReset",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "ResetPassword",
    "RelativePath": "api/Account/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "resetPasswordDto",
        "Type": "AccountService.DTO.UpdatePasswordDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "UpdateServiceProviderRole",
    "RelativePath": "api/Account/UpdateServiceProviderRole/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "UpdateUserById",
    "RelativePath": "api/Account/UpdateUser/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userModel",
        "Type": "AccountService.DTO.UserDetailsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AccountService.Controllers.AccountController",
    "Method": "VerifyOtp",
    "RelativePath": "api/Account/verify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "otpVerify",
        "Type": "AccountService.DTO.OtpDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]